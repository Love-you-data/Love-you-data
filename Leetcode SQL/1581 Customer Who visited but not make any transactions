-- Table: Visits

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | user_id       | int     |
-- | visit_date    | date    |
-- +---------------+---------+
-- (user_id, visit_date) is the primary key for this table.
-- Each row of this table indicates that user_id has visited the bank in visit_date.

-- Table: Transactions

-- +------------------+---------+
-- | Column Name      | Type    |
-- +------------------+---------+
-- | user_id          | int     |
-- | transaction_date | date    |
-- | amount           | int     |
-- +------------------+---------+
-- There is no primary key for this table, it may contain duplicates.
-- Each row of this table indicates that user_id has done a transaction of amount in transaction_date.
-- It is guaranteed that the user has visited the bank in the transaction_date.(i.e The Visits table contains (user_id, transaction_date) 
-- in one row)
 -- A bank wants to draw a chart of the number of transactions bank visitors did in one visit to the bank and
 -- the corresponding number of visitors who have done this number of transaction in one visit.

-- Write an SQL query to find how many users visited the bank and didn't do any transactions, 


-- The result table will contain two columns:

-- transactions_count which is the number of transactions done in one visit.
-- visits_count which is the corresponding number of users who did transactions_count in one visit to the bank.
-- transactions_count should take all values from 0 to max(transactions_count) done by one or more users.


CREATE TABLE visits(user_id int,visit_date date);
TRUNCATE TABLE visits; 
INSERT INTO visits VALUES(1,"2020-01-01"),
(2,"2020-01-02"),
(12,"2020-01-01"),
(19,"2020-01-03"),
(1,"2020-01-02"),
(2,"2020-01-03"),
(1,"2020-01-04"),
(7,"2020-01-11"),
(9,"2020-01-25"),
(8,"2020-01-28"),
(10,"2020-01-30");


DROP TABLE transactions;
CREATE TABLE transactions(user_id int,transaction_date date,amount int);
TRUNCATE TABLE transactions;
INSERT INTO transactions VALUES(1,"2020-01-02",120),
(2,"2020-01-03",22),
(7,"2020-01-11",232),
(1,"2020-01-04",7),
(9,"2020-01-25",33),
(9,"2020-01-25",66),
(8,"2020-01-28",1),
(9,"2020-01-25",99),
(10,"2020-01-30",949),
(10,"2020-01-30",991),
(10,"2020-01-30",299),
(10,"2020-01-30",199),
(10,"2020-01-30",949),
(10,"2020-01-30",991),
(10,"2020-01-30",299),
(10,"2020-01-30",199);


-- SQL USERS WHO VISITED BUT NOT MADE ANY TRANSACTIONS
SELECT user_id, count(user_id) AS count_no_trans
FROM Visits
WHERE user_id NOT IN
    (SELECT user_id
    FROM Transactions
    GROUP BY user_id)
GROUP BY user_id;
