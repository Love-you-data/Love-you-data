
-- +---------------------+---------+
-- | Column Name         | Type    |
-- +---------------------+---------+
-- | customer_id         | int     |
-- | customer_name       | varchar |
-- +---------------------+---------+
-- customer_id is the primary key for this table.
-- customer_name is the name of the customer.
 

-- Table: Orders

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+--------+
-- | order_id      | int     |
-- | customer_id   | int     |
-- | product_name  | varchar |
-- +---------------+---------+
-- order_id is the primary key for this table.
-- customer_id is the id of the customer who bought the product "product_name".
 

-- Write an SQL query to report the customer_id and customer_name of customers who bought products "A", "B" but did not buy the product "C" since we want to recommend them buy this product.

-- Return the result table ordered by customer_id.

-- The query result format is in the following example.

 

-- Customers table:
-- +-------------+---------------+
-- | customer_id | customer_name |
-- +-------------+---------------+
-- | 1           | Daniel        |
-- | 2           | Diana         |
-- | 3           | Elizabeth     |
-- | 4           | Jhon          |
-- +-------------+---------------+

-- Orders table:
-- +------------+--------------+---------------+
-- | order_id   | customer_id  | product_name  |
-- +------------+--------------+---------------+
-- | 10         |     1        |     A         |
-- | 20         |     1        |     B         |
-- | 30         |     1        |     D         |
-- | 40         |     1        |     C         |
-- | 50         |     2        |     A         |
-- | 60         |     3        |     A         |
-- | 70         |     3        |     B         |
-- | 80         |     3        |     D         |
-- | 90         |     4        |     C         |
-- +------------+--------------+---------------+

-- Result table:
-- +-------------+---------------+
-- | customer_id | customer_name |
-- +-------------+---------------+
-- | 3           | Elizabeth     |
-- +-------------+---------------+
-- Only the customer_id with id 3 bought the product A and B but not the product C.
;
DROP TABLE customers;
CREATE TABLE customers(id int,name text);
TRUNCATE TABLE customers;
INSERT INTO CUSTOMERS VALUES(1,"Daniel"),(2,"Diana"),(3,"Elizabeth"),(4,"John");

DROP TABLE orders;
CREATE TABLE orders(oid int,cid int,pname text);
TRUNCATE TABLE orders;
INSERT INTO orders VALUES(10,1,"A"),
(20,1,"B"),
(30,1,"D"),
-- (40,1,"C"),
(50,2,"A"),
(60,3,"A"),
(70,3,"B"),
(80,3,"D"),
(90,4,"C"),
(100,1,"A"),
(110,1,"B"),
(120,1,"D"),
(130,2,"C");
SELECT * FROM orders;
WITH cte as (
SELECT c.name,pname
FROM customers c
RIGHT JOIN orders o
ON o.cid=c.id)
SELECT name FROM(
SELECT name,group_concat(pname) as ct 
FROM cte 
GROUP BY name 
) cff
WHERE ct LIKE "%A,B%"  AND ct NOT LIKE "%C%"
