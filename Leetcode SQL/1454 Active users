-- Table Accounts:

-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | id            | int     |
-- | name          | varchar |
-- +---------------+---------+
-- the id is the primary key for this table.
-- This table contains the account id and the user name of each account.
 
 -- Table Logins:
-- +---------------+---------+
-- | Column Name   | Type    |
-- +---------------+---------+
-- | id            | int     |
-- | login_date    | date    |
-- +---------------+---------+
-- There is no primary key for this table, it may contain duplicates.
-- This table contains the account id of the user who logged in and the login date. A user may log in multiple times in the day.
 
 -- Write an SQL query to find the id and the name of active users.
-- Active users are those who logged in to their accounts for 5 or more consecutive days.
-- Return the result table ordered by the id.
-- The query result format is in the following example:
-- Accounts table:
-- +----+----------+
-- | id | name     |
-- +----+----------+
-- | 1  | Winston  |
-- | 7  | Jonathan |
-- +----+----------+

-- Logins table:
-- +----+------------+
-- | id | login_date |
-- +----+------------+
-- | 7  | 2020-05-30 |
-- | 1  | 2020-05-30 |
-- | 7  | 2020-05-31 |
-- | 7  | 2020-06-01 |
-- | 7  | 2020-06-02 |
-- | 7  | 2020-06-02 |
-- | 7  | 2020-06-03 |
-- | 1  | 2020-06-07 |
-- | 7  | 2020-06-10 |
-- +----+------------+

-- Result table:
-- +----+----------+
-- | id | name     |
-- +----+----------+
-- | 7  | Jonathan |
-- +----+----------+
-- User Winston with id = 1 logged in 2 times only in 2 different days, so, Winston is not an active user.
-- User Jonathan with id = 7 logged in 7 times in 6 different days, five of them were consecutive days, so, Jonathan is an active user.
CREATE TABLE IF NOT EXISTS Accounts(id int,name1 text);
TRUNCATE TABLE accounts;
INSERT INTO Accounts VALUES(1,"Winston"),
(7,"Jonathan");

CREATE TABLE IF NOT EXISTS login(id int,login_date date);
TRUNCATE TABLE login;
INSERT INTO login VALUES(7,"2020-05-30"),
(1,"2020-05-30"),
(7,"2020-05-31"),
(7,"2020-06-01"),
(7,"2020-06-02"),
(7,"2020-06-02"),
(7,"2020-06-03"),
(1,"2020-06-07"),
(7,"2020-06-10"),
(1,"2020-06-11"),
(4,"2020-06-12"),
(4,"2020-06-13"),
(4,"2020-06-14"),
(4,"2020-06-15"),
(4,"2020-06-16")
;
SELECT *
FROM Accounts
WHERE id IN
    (SELECT DISTINCT t1.id
    FROM login AS t1 INNER JOIN login AS t2
    ON t1.id = t2.id AND datediff(t1.login_date, t2.login_date) BETWEEN 1 AND 4
    GROUP BY t1.id, t1.login_date
    HAVING count(DISTINCT(t2.login_date)) = 4)
ORDER BY id;
