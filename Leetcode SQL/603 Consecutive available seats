-- Several friends at a cinema ticket office would like to reserve consecutive available seats.
-- Can you help to query all the consecutive available seats order by the seat_id using the following cinema table?
-- | seat_id | free |
-- |---------|------|
-- | 1       | 1    |
-- | 2       | 0    |
-- | 3       | 1    |
-- | 4       | 1    |
-- | 5       | 1    |
 

-- Your query should return the following result for the sample case above.

-- | seat_id |
-- |---------|
-- | 3       |
-- | 4       |
-- | 5       |
-- Note:
-- The seat_id is an auto increment int, and free is bool ('1' means free, and '0' means occupied.).
-- Consecutive available seats are more than 2(inclusive) seats consecutively available.

CREATE TABLE IF NOT EXISTS cinema(seat_id int,free int);
TRUNCATE TABLE cinema;
INSERT INTO cinema (seat_id,free) VALUES(1,1),(2,0),(3,1),(4,1),(5,1),(6,0),(7,1),(8,1),(9,1),(10,1);

SELECT *
FROM(
SELECT DISTINCT t1.seat_id
FROM cinema as t1,cinema as t2 ,cinema as t3
WHERE  abs(t1.seat_id-t3.seat_id)=2  AND abs(t1.seat_id-t2.seat_id)=1 AND abs(t2.seat_id-t3.seat_id)=1
AND t1.free='1' AND t3.free='1'  and t2.free=1

UNION
SELECT DISTINCT t2.seat_id
FROM cinema as t1,cinema as t2 ,cinema as t3
WHERE  abs(t1.seat_id-t3.seat_id)=2  AND abs(t1.seat_id-t2.seat_id)=1 AND abs(t2.seat_id-t3.seat_id)=1
AND t1.free='1' AND t3.free='1'  and t2.free=1

UNION

SELECT DISTINCT t3.seat_id
FROM cinema as t1,cinema as t2 ,cinema as t3
WHERE  abs(t1.seat_id-t3.seat_id)=2  AND abs(t1.seat_id-t2.seat_id)=1 AND abs(t2.seat_id-t3.seat_id)=1
AND t1.free='1' AND t3.free='1'  and t2.free=1
)t
ORDER BY seat_id;
